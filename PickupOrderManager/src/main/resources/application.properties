
spring.main.banner-mode=off
logging.level.org.springframework=ERROR
spring.jpa.hibernate.ddl-auto= create-drop
spring.datasource.url=jdbc:postgresql://localhost:5432/pickupservicedb2
spring.datasource.username=nikhilyadav
spring.datasource.password=$Danton7
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
server.port=8090
server.servlet.context-path=/api
#KafkaProducer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.client-id=pickupServiceProducer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=5
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.linger-ms= 15000
spring.kafka.producer.enable-Idempotence= true
spring.kafka.producer.transactionalId= OrderTransId

#KafkaConsumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.client-id=pickupServiceConsumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.heartbeat-interval=6000

kafka.topic.name.pickup= Pickup
kafka.topic.name.status= pickupStatus
kafka.consumer.groupId= PickupGroup